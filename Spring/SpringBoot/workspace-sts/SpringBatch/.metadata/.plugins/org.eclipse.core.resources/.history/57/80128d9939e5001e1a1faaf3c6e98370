package com.telusko.config;


import org.springframework.batch.core.Step;
import org.springframework.batch.core.repository.JobRepository;
import org.springframework.batch.core.step.builder.StepBuilder;
import org.springframework.batch.item.file.FlatFileItemReader;
import org.springframework.batch.item.file.LineMapper;
import org.springframework.batch.item.file.mapping.DefaultLineMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.FileSystemResource;

import com.telusko.binding.Customer;

@Configuration
public class SpringBatchConfig 
{
	@Autowired
	JobRepository jobRepository;
	
	//item reader
	
	@Bean
	public FlatFileItemReader<Customer> customerReader()
	{
		FlatFileItemReader<Customer> itemReader = new FlatFileItemReader<>();
		itemReader.setResource(new FileSystemResource("src/main/resources/customers.csv")); //where the csv file
		itemReader.setName("csv-reader");
		itemReader.setLinesToSkip(1);
		itemReader.setLineMapper(lineMapper());
		return itemReader;
	}
	
	//how to read file.. like if there null value then what to do
	private LineMapper<Customer> lineMapper() 
	{
		DefaultLineMapper<Customer> lineMapper=new DefaultLineMapper<>();
		DelimitedLineTokenzier lineTokenizer=new DelimitedLineTokenzier();
		return null;
	}
	//item processor
	
	//item writer
	
	//step
	
	


	public Step step()
	{
		return new StepBuilder("step-1",jobRepository).
				<Customer,Customer>chunk(10,transactionManager);
	}
	
	//job
}
